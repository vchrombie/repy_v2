#attack3 lock, racing condition 
#cases that one thread create and the other tries to write 
#racing condition, thread 2 checks that if thread 1 is using a lock, if not then just write it  
#Exception (with type 'exceptions.ValueError'): ('An error occurred in thread two', FileInUseError('Cannot open file "testfile.txt" because it is already open!',))
#Total PASSED: 3
#Total FAILED: 108
# Clean up if the file exists.
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_aac9988.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ab10047.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ag9489.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_aj4128.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ajt9694.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_akg9910.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_am14079.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_an4098.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ap7949.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ar8300.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_at5076.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_av3396.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_bb3722.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_bp2200.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_bsc6146.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_cp4123.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_crt7919.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_db4922.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_de814.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_dh3382.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_dkd284.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_dp3757.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ds7615.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_dsc7792.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_dz2188.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_eav8168.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_eh3300.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_es5185.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ew1791.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_fgd238.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_fkk2008.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_geg321.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_gh2222.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_gt2126.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ha2755.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_hj2118.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_hq2040.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_hw2509.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_imr8217.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jc12690.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jg7683.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jl14678.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jnr8342.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jw4186.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jw6680.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jwh8918.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jyl9583.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_jz3928.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_kc4433.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_kk5268.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_kp3291.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_kue202.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_lpv2011.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_lsp8273.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mlh9655.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mm13075.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mm13171.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mmy5950.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mr7172.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ms15138.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mx2228.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_mzg9288.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_nd2290.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_nd2661.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_nms9607.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_nr2320.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ns5239.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_pg2441.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_qap205.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_qc815.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_raz6675.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_rr4433.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_rsc9069.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_rsh9689.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_rwm9998.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sb9156.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sc9608.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sg8013.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sg8024.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sl7228.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sl9052.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sm11378.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sr6895.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sr7013.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ss17542.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ss17936.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ssk9850.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ssm10021.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_st5073.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sv2616.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_sv2657.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_tm4258.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_tmh8479.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_tnl2012.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_tyz212.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ua2047.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_uhm202.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_vkk2020.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_vm2496.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_vrk3366.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_vt2182.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_yc4557.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_yl7685.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ym2977.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_ym3144.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_yx3254.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_zm2538.r2py
#Testcase: zx904_attackcase3.r2py, Reference Monitor: reference_monitor_zx904.r2py

if "testfile.txt" in listfiles():
    removefile("testfile.txt")

def thread_one():
    try:
        # New file operation
        myfile = openfile("testfile.txt", True)
        
        # Write operation
        myfile.writeat("12345678", 0)
        
        # Attempt to overwrite the beginning of the file
        myfile.writeat("Hi!", 0) 

        # Now, undo the previous write
        myfile.undo()
        myfile.writeat("        ", 0)
        # Assert that the contents are still "12345678"
        assert("12345678" == myfile.readat(8, 0))        
        myfile.writeat("")
        myfile.close()
        log("Thread one completed successfully.")
        
    except Exception as e:
        raise ValueError("An error occurred in thread one")
    
    finally:
        exitall()

def thread_two():
    try:
        # Sleep to let thread one run first (optional)
        
        # New file operation
        myfile = openfile("testfile.txt", True)
        myfile.writeat("12345678", 0)
        
        # Attempt to overwrite the beginning of the file
        myfile.writeat("Hi!", 0) 

        # Now, undo the previous write
        myfile.undo()
        # Assert that the contents are still "12345678"
        assert("12345678" == myfile.readat(8, 0))
        
        # Additional operation to show thread activity
        myfile.close()
        log("Thread two completed successfully.")
        
    except Exception as e:
        raise ValueError("An error occurred in thread two", e)

# Create threads
createthread(thread_one)
createthread(thread_two)
