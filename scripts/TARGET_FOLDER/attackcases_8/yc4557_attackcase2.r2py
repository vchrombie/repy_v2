if "exploitfile.txt" in listfiles():
  removefile("exploitfile.txt")

# create a file
exploitfile = openfile("exploitfile.txt", True)

# initial write to the file
exploitfile.writeat("securedata", 0)

# attempt to overwrite with malicious data
exploitfile.writeat("malicious", 0)

# try to read the file; it should still show "securedata" because the malicious write is uncommitted
assert("securedata" == exploitfile.readat(10, 0)), "Uncommitted write is visible!"

# try to exploit undo functionality after closing the file
exploitfile.close()
try:
    exploitfile.undo()
    print("Exploit failed: undo did not work after closing the file.")
except Exception as e:
    print("Exploit failed: Exception occurred -", str(e))

# check the final content of the file, it should be "malicious" because the write was committed on close
exploitfile = openfile("exploitfile.txt", False) # reopen the file to read
assert("malicious" == exploitfile.readat(9, 0)), "File content was not committed on close!"

# clean up
exploitfile.close()
removefile("exploitfile.txt")
