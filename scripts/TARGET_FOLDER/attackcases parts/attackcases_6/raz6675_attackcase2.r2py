# Ricky Zapata
# Professor Cappos
# Computer Security


filename = "testfile_multiple.txt"
if filename in listfiles():
	removefile(filename)

test_file = openfile(filename, True)
    
# Perform multiple writes
test_file.writeat("data1", 0)
test_file.writeat("data2", 5)  # Assume "data2" is written at position 5
test_file.writeat("data3", 10) # Assume "data3" is written at position 10
    
# Undo the last write operation and check
test_file.undo()
assert("data2" in test_file.readat(15, 0))  # "data3" should be gone
    
# Undo the second write operation and check
test_file.undo()
assert("data1" in test_file.readat(15, 0) and "data2" not in test_file.readat(15, 0))  # only "data1" should be present

# Try to undo more times than the number of write operations
test_file.undo()
test_file.undo()  # This has no write operation to undo

# Clean up
test_file.close()
removefile(filename)



filename = "testfile_large.txt"
if filename in listfiles():
	removefile(filename)
    
large_data = "A" * (150000000 + 1)  # Data larger than the maximum allowed size, max allowed size is 150000000
test_file = openfile(filename, True)

try:
	test_file.writeat(large_data, 0)  # This should not be allowed by the security layer
	# Should not reach this assert statement
	assert(1==0)
except:
	# If it reaches this exception, the code is working as it should
	assert(0==0)

# Clean up
test_file.close()
removefile(filename)



filename = "testfile_closed.txt"
if filename in listfiles():
	removefile(filename)

test_file = openfile(filename, True)
test_file.close()

# These operations should not be allowed as the file is closed
try:
	test_file.readat(10, 0)
	assert(1==0)
except:
	assert(0==0)

try:
	test_file.writeat("data", 0)
	assert(1==0)
except:
	assert(0==0)

try:
	test_file.undo()
	assert(1==0)
except:
	assert(0==0)

