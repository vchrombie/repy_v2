# Ricky Zapata
# Professor Cappos
# Computer Security


"""
This security layer inadequately handles the undo functionality

Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
    
"""
TYPE = "type"
ARGS = "args"
RETURN = "return"
EXCP = "exceptions"
TARGET = "target"
FUNC = "func"
OBJC = "objc"


class LPFile():
	_MAX_ALLOWED_DATA_SIZE = 150000000
	def __init__(self, filename, create):
        	# globals
        	mycontext['debug'] = False
        	self._LPfile = openfile(filename, create)
        	self._data = []
		self._closed = False

	def readat(self, bytes, offset):
		if self._closed or not isinstance(bytes, int) or bytes <= 0 or bytes > self._MAX_ALLOWED_DATA_SIZE or not isinstance(offset, int) or offset < 0:
			return ""
		return self._LPfile.readat(min(bytes, self._MAX_ALLOWED_DATA_SIZE), offset)

	def writeat(self, data, offset):
		if self._closed or not isinstance(data, str) or not data or len(data) > self._MAX_ALLOWED_DATA_SIZE or not isinstance(offset, int) or offset < 0:
			return None
		current_data = self._LPfile.readat(len(data),offset)
		self._data.append((current_data, offset))
        	self._LPfile.writeat(data, offset)

    	def undo(self):
		if self._closed or not self._data:
			return
	
		most_recent_data, most_recent_offset = self._data.pop()
		self._LPfile.writeat(most_recent_data, most_recent_offset)

    	def close(self):
		self._closed = True
        	self._LPfile.close()

def LPopenfile(filename, create):
	return LPFile(filename, create)

# The code here sets up type checking and variable hiding for you.
# You should not need to change anything below here.
sec_file_def = {
    "obj-type": LPFile,
    "name": "LPFile",
    "writeat": {"type": "func", "args": (str, (int, long)), "exceptions": Exception, "return": (int, type(None)), "target": LPFile.writeat},
    "readat": {"type": "func", "args": ((int, long, type(None)), (int, long)), "exceptions": Exception, "return": str, "target": LPFile.readat},
    "undo": {"type": "func", "args": None, "exceptions": None, "return": type(None), "target": LPFile.undo},
    "close": {"type": "func", "args": None, "exceptions": Exception, "return": (bool, type(None)), "target": LPFile.close}
}

CHILD_CONTEXT_DEF["openfile"] = {
    TYPE: OBJC,
    ARGS: (str, bool),
    EXCP: Exception,
    RETURN: sec_file_def,
    TARGET: LPopenfile
}

# Execute the user code
secure_dispatch_module()


