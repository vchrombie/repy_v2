# Attack Case 4: Large file attack

# for referencemonitor in reference_monitor_j*; do echo $referencemonitor under test; for testcase in jl14678_attackcase4*; do python repy.py restrictions.default encasementlib.r2py $referencemonitor $testcase; done; done

# clean up if the file exists.
if "attack4.txt" in listfiles():
    removefile("attack4.txt")

a_large_number = 100000

def efficiency_attack():
    try:
        # Open a file to perform the efficiency attack
        f = openfile("attack4.txt", True)
        
        # Perform a very large number of small writes
        for i in range(a_large_number):
            f.writeat("A", i)
        
        f.close()

    except Exception as e:
        log("Error during efficiency attack: " + str(e))
        return

    # Check the size of the file to see if the writes were successful
    f = openfile("attack4.txt", False)
    data_length = len(f.readat(None, 0))
    f.close()

    if data_length == a_large_number:  # This should match the number of writes performed
        log("[!]Attack Case 4 successful: Data length in file: " + str(data_length))
    else:
        log("[!]Attack Case 4 failed")


efficiency_attack()
