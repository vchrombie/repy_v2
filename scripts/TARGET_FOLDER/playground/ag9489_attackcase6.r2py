def beforeEach():
  # clean up if the file exists.
  if "testfile.txt" in listfiles():
    removefile("testfile.txt")

def terminate(t):
  def sleep_for():
    # after sleeping t sec, terminate the attack
    sleep(t)
    raise RuntimeError("reference monitor took more than 5 seconds => a bug was detected!\n")
  return sleep_for

createthread(terminate(10))

#Writing at offset greater than EOF. SeekPastEndOfFileError Exception is thrown (Expected)
def offsetGreaterThanEOF():
  #setup
  beforeEach()
  myfile = openfile("testfile.txt", True)
  try:
    myfile.writeat("first", 10000)
  except SeekPastEndOfFileError:
    pass
  else:
    log("ERROR ATTACK | SeekPastEndOfFileError Exception is swallowed or not thrown.\n")
  myfile.close()

offsetGreaterThanEOF()

exitall()