# Test Case 3
# Trying to write to the same file from multiple threads

'''
Debugging Information: This is a piece of code I struggled with in my original program as well. 
If this triggers an error, the program cannot handle concurrent threads.

Use thread locks, mentioned in the Repy API documentation page.
Either allow only one thread to be written, or both one after the other. Trying to write concurrently would crash the program. 
'''

# clean up if the file exists.
if "testfile.txt" in listfiles():
  removefile("testfile.txt")

# create a file
myfile=openfile("testfile.txt",True)

# define a function that writes some data to the file
def write_data(data):
  try:
    myfile.writeat(data,0)
  except Exception as e:
    # log any exception that occurs
    log("Exception occurred: "+str(e)+"\n")


def write_data(data):
  try:
    myfile.writeat(data,0)
  except Exception as e:
    # log any exception that occurs
    log("Exception occurred: "+str(e)+"\n")

# create a closure that calls write_data with "Hello"
def write_hello():
  write_data("Hello")

# create a closure that calls write_data with "World"
def write_world():
  write_data("World")

# create two threads that execute the closures
createthread(write_hello)
createthread(write_world)


# wait for the threads to finish
sleep(0.1)

# close the file
myfile.close()

# check the file contents, this was written to experiment on how this worked.
'''

myfile=openfile("testfile.txt",False)
data=myfile.readat(None,0)
myfile.close()

# log the result
log("The file contains: "+data+"\n")

'''