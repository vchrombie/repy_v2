# Ethan Shieh

# check whether you are allowed to perform a write that writes past the current
# EOF of the file, but not past the EOF of the file including the uncommitted
# writeat(). According to the RepyV2 API, the second write should be valid
# because when the second write occurs, the first write is written to the file,
# assuming that the first write was valid (but previous attacks verified this),
# so the EOF including the first write should be used to determine if the offset
# of the second write is within EOF.

# If we execute a program that performs these functions in this order:
#
# write1
# write2 with offset greater than offset past current (in-file) eof
#
# and it fails, then it is an ERROR.

# this case catches at least one person
# if they don't track file lengths or offsets at all then this case doesn't
# work on them. this case only catches people who attempt to track file length
# but don't track both the current and pending length.

# clean up if the file exists
if "testfile.txt" in listfiles():
  removefile("testfile.txt")

# create a file
myfile=openfile("testfile.txt",True)

myfile.writeat("123456789", 0)

try:
  myfile.writeat("abc", 3)
except Exception as e:
  log(e, "\n")
  log("ERROR: es5185_attackcase5 was not able to writeat to offset 3 when previous write was 9 bytes long!\n")
  exitall()


try:
  myfile.close()
except:
  pass