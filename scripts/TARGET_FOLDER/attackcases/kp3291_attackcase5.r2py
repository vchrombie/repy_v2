# This is a multithreading attack scenario.
# It demonstrates the potential security vulnerabilities in a multi-threaded environment where one thread is
# attempting to read and write to a file while another thread is trying to remove the same file concurrently.

# Clean up of existing file
if "testfile.txt" in listfiles():
  removefile("testfile.txt")

def threadone():
  # New File Operation
  myfile=openfile("testfile.txt", True)
  #Reading the File
  try:
      #Writing valid data to file
      myfile.writeat("Hello",0)
      sleep(3)
      myfile.close()
  #except RepyArgumentError:
  #    pass
  finally:
      exitall()

def threadtwo():
  try:
    #Removing the file
    if "testfile.txt" in listfiles():
      removefile("testfile.txt")
    log("Attack case 5 executed. File Successfully Removed! \n")
  finally:
    exitall()

createthread(threadone)
createthread(threadtwo)